server {
    listen 80;
    server_name reflaunt.local;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen 80;

    ssl_certificate           /etc/certificate/cert.crt;
    ssl_certificate_key       /etc/certificate/cert.key;

    server_name reflaunt.local;
    add_header Cache-Control no-cache;
    location /api {
        proxy_pass http://192.168.10.1:3000;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
    }

    location / {
        proxy_pass http://192.168.10.1:4030;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
    }
}

server {
    listen 80;
    server_name client.reflaunt.local;
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name client.reflaunt.local;
    root "/var/www/styletribute/client";

    index index.html index.htm index.php;

    ssl_certificate           /etc/certificate/cert.crt;
    ssl_certificate_key       /etc/certificate/cert.key;


    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log /var/log/nginx/reflaunt-client-access.log;
    error_log  /var/log/nginx/reflaunt-client-error.log error;

    sendfile off;

    client_max_body_size 100m;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
        fastcgi_param   SCRIPT_FILENAME  $document_root/index.php;
        fastcgi_param   MOA_CORS "local.reflaunt.local,test1.reflaunt.local,mlocal.reflaunt.local";
        fastcgi_param   MAGE_PATH /var/www/reflauntapi;
        fastcgi_param   MAGE_RUN_CODE 1;
        expires off;
        include fastcgi_params;

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }
    
    location ~* \.(js|css|eot|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }

    location ~ /\.ht {
        deny all;
    }
}

server {
    listen 80;
    server_name sdk.reflaunt.local;
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name sdk.reflaunt.local;
    root "/var/www/styletribute/sdk";

    index index.html index.htm index.php;

    ssl_certificate           /etc/certificate/cert.crt;
    ssl_certificate_key       /etc/certificate/cert.key;


    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log /var/log/nginx/ushift-access.log;
    error_log  /var/log/nginx/ushift-error.log error;

    sendfile off;

    client_max_body_size 100m;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
        fastcgi_param   SCRIPT_FILENAME  $document_root/index.php;
        fastcgi_param   MOA_CORS "local.reflaunt.local,test1.reflaunt.local,mlocal.reflaunt.local";
        fastcgi_param   MAGE_PATH /var/www/reflauntapi;
        fastcgi_param   MAGE_RUN_CODE 1;
        expires off;
        include fastcgi_params;

        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
    }

    location ~ /\.ht {
        deny all;
    }
}





server {
    listen 443 ssl;
    listen 80;

    ssl_certificate           /etc/certificate/cert.crt;
    ssl_certificate_key       /etc/certificate/cert.key;

    server_name api.reflaunt.local;
    add_header Cache-Control no-cache;
    location / {

       set $cors "true";

       if ($request_method = 'OPTIONS') {
           set $cors "${cors}options";
       }

       if ($request_method = 'GET') {
           set $cors "${cors}get";
       }
       if ($request_method = 'POST') {
           set $cors "${cors}post";
       }
       if ($request_method = 'PUT') {
           set $cors "${cors}put";
       }
       if ($request_method = 'DELETE') {
           set $cors "${cors}delete";
       }

       if ($cors = "trueget") {
           add_header 'Access-Control-Allow-Origin' "$http_origin" always;
           add_header 'Access-Control-Allow-Credentials' 'true';
       }

       if ($cors = "truepost") {
           add_header 'Access-Control-Allow-Origin' "$http_origin" always;
           add_header 'Access-Control-Allow-Credentials' 'true';
       }
       if ($cors = "trueput") {
           add_header 'Access-Control-Allow-Origin' "$http_origin" always;
           add_header 'Access-Control-Allow-Credentials' 'true';
       }
       if ($cors = "truedelete") {
           add_header 'Access-Control-Allow-Origin' "$http_origin" always;
           add_header 'Access-Control-Allow-Credentials' 'true';
       }

       if ($cors = "trueoptions") {
           add_header 'Access-Control-Allow-Origin' "$http_origin" always;
           add_header 'Access-Control-Allow-Credentials' 'true';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
           add_header 'Content-Length' 0;
           add_header 'Content-Type' 'text/plain charset=UTF-8';
           return 204;
       }    
        proxy_pass http://192.168.10.1:3030;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
    }
}
